{"version":3,"sources":["components/react_todo_main/src/components/Option.js","components/react_todo_main/src/components/Create&SelectList.js","components/react_todo_main/src/components/TodoInput.js","components/react_todo_main/src/components/Header.js","components/react_todo_main/src/components/Sort.js","components/react_todo_main/src/components/Empty.js","components/react_todo_main/src/components/Title.js","components/react_todo_main/src/components/DeleteIcon.js","components/react_todo_main/src/components/ListItem.js","components/react_todo_main/src/components/TodoItems.js","components/react_todo_main/src/components/SingleList.js","components/react_todo_main/src/components/TaskHolder.js","components/react_todo_main/src/components/ClearAll.js","components/react_todo_main/src/components/TodoApp.js","components/Form.js","components/Nav.js","components/Home.js","components/Information.js","components/App.js","reportWebVitals.js","index.js"],"names":["Option","props","id","listDetails","value","title","CreateSelectList","lists","sort","compareAsc","compareDesc","className","onClick","listName","prompt","timestamp","Date","getTime","setListInformation","type","name","map","list","TodoInput","htmlFor","autoComplete","placeholder","onChange","setInputText","document","querySelectorAll","length","inputText","targetList","parseInt","getElementById","setTaskToList","querySelector","createTaskAndList","Header","Sort","setSort","Empty","Title","DeleteIcon","e","element","target","removeList","parentElement","ListItem","todo","todoID","edit","todoText","listID","removeTodo","TodoItems","todos","SingleList","TaskHolder","ClearAll","clearAll","TodoApp","useState","setInput","lsLists","JSON","parse","localStorage","getItem","setLists","a","b","useEffect","setItem","stringify","concat","editTimestamp","filter","Form","onInput","searchText","setOpen","required","getCountriesOnStart","open","sugCountries","onMouseLeave","country","textContent","Country","preventDefault","getData","Nav","to","Home","Information","info","confirmed","active","deaths","App","setInfo","setSugCountries","path","data","fetch","then","res","ok","json","Error","Confirmed","toLocaleString","Active","Deaths","catch","error","console","log","alert","toLowerCase","sugData","slice","filtered","d","regex","RegExp","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9093d067.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <option id={props.listDetails.id} value={props.listDetails.id}>\r\n      {props.listDetails.title}\r\n    </option>\r\n  );\r\n}\r\n\r\nexport default Option;\r\n","import React from 'react';\r\nimport '../styles/Create&SelectList.css';\r\nimport Option from './Option';\r\n\r\nfunction CreateSelectList(props) {\r\n  props.lists.sort(props.sort === 'asc' ? props.compareAsc : props.compareDesc);\r\n  return (\r\n    <div className=\"todo-select\">\r\n      <button\r\n        onClick={() => {\r\n          const listName = prompt('Please name your list!', 'New List');\r\n          if (listName) {\r\n            const timestamp = new Date().getTime();\r\n            props.setListInformation(timestamp, listName);\r\n          } else return;\r\n        }}\r\n        type=\"button\"\r\n        className=\"newListBtn\"\r\n      >\r\n        Create a list\r\n      </button>\r\n\r\n      <select name=\"select-list\" id=\"select-list\">\r\n        {props.lists.map(list => {\r\n          return <Option key={list.id} listDetails={list} />;\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateSelectList;\r\n","import React from 'react';\r\nimport '../styles/TodoInput.css';\r\nfunction TodoInput(props) {\r\n  return (\r\n    <div className=\"todo-input\">\r\n      <label htmlFor=\"todoInput\">Add a daily task!</label>\r\n      <input\r\n        className=\"input-field\"\r\n        autoComplete=\"off\"\r\n        type=\"text\"\r\n        name=\"todoInput\"\r\n        id=\"todoInput\"\r\n        placeholder=\"Write something...\"\r\n        onChange={props.setInputText}\r\n      />\r\n      <input\r\n        onClick={() => {\r\n          const timestamp = new Date().getTime();\r\n          if (document.querySelectorAll('.list').length > 0) {\r\n            if (props.inputText) {\r\n              const targetList = parseInt(\r\n                document.getElementById('select-list').value\r\n              );\r\n              props.setTaskToList(targetList, timestamp);\r\n\r\n              document.querySelector('input[type=text]').value = '';\r\n            }\r\n          } else {\r\n            if (props.inputText) {\r\n              const listName = prompt('Please name your list!', 'New List');\r\n              props.createTaskAndList(timestamp, listName);\r\n              document.querySelector('input[type=text]').value = '';\r\n            }\r\n          }\r\n        }}\r\n        type=\"submit\"\r\n        id=\"submitBtn\"\r\n        value=\"Add a task\"\r\n        className=\"input-submit\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoInput;\r\n","import React from 'react';\r\nimport CreateSelectList from './Create&SelectList';\r\nimport TodoInput from './TodoInput';\r\n\r\nimport '../styles/Header.css';\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <TodoInput\r\n        inputText={props.inputText}\r\n        setTaskToList={props.setTaskToList}\r\n        setInputText={props.setInputText}\r\n        setListInformation={props.setListInformation}\r\n        createTaskAndList={props.createTaskAndList}\r\n      />\r\n      <CreateSelectList\r\n        lists={props.lists}\r\n        setListInformation={props.setListInformation}\r\n        compareAsc={props.compareAsc}\r\n        compareDesc={props.compareDesc}\r\n        sort={props.sort}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../styles/Sort.css';\r\nfunction Sort(props) {\r\n  return (\r\n    <div className=\"sort\">\r\n      <label htmlFor=\"sort\">Sort by:</label>\r\n      <select\r\n        onChange={() => {\r\n          props.sort === 'asc' ? props.setSort('desc') : props.setSort('asc');\r\n        }}\r\n        name=\"sort\"\r\n        id=\"sort\"\r\n      >\r\n        <option value=\"Newest updates\">Newest updates</option>\r\n        <option value=\"Oldest updates\">Oldest updates</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\nimport '../styles/Empty.css';\r\nfunction Empty() {\r\n  return (\r\n    <div className=\"empty\">\r\n      <h2 className=\"empty-text\">There are no lists created!</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Empty;\r\n","import React from 'react';\r\nimport '../styles/Title.css';\r\nfunction Title(props) {\r\n  return <h2 className=\"title\">{props.title}</h2>;\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport '../styles/DeleteIcon.css';\r\nfunction DeleteIcon(props) {\r\n  return (\r\n    <i\r\n      onClick={e => {\r\n        const element = e.target;\r\n\r\n        props.removeList(parseInt(element.parentElement.id));\r\n      }}\r\n      className=\"fas fa-trash-alt deleteList\"\r\n    ></i>\r\n  );\r\n}\r\n\r\nexport default DeleteIcon;\r\n","import React from 'react';\r\n\r\nfunction ListItem(props) {\r\n  return (\r\n    <li className=\"single-item\" id={props.todo.todoID} edit=\"\">\r\n      <span>{props.todo.todoText}</span>\r\n      <i\r\n        onClick={e => {\r\n          const element = e.target;\r\n          const todoID = parseInt(element.parentElement.id);\r\n          const list = element.parentElement.parentElement.parentElement;\r\n          const listID = parseInt(list.id);\r\n\r\n          props.removeTodo(listID, todoID);\r\n        }}\r\n        className=\"fas fa-trash-alt deleteItem\"\r\n      ></i>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport '../styles/TodoItems.css';\r\nimport ListItem from './ListItem';\r\n\r\nfunction TodoItems(props) {\r\n  return (\r\n    <ul className=\"items-list\">\r\n      {props.todos.map(todo => {\r\n        return (\r\n          <ListItem\r\n            removeTodo={props.removeTodo}\r\n            key={todo.todoID}\r\n            todo={todo}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoItems;\r\n","import React from 'react';\r\nimport '../styles/SingleList.css';\r\nimport Title from './Title';\r\nimport DeleteIcon from './DeleteIcon';\r\nimport TodoItems from './TodoItems';\r\nfunction SingleList(props) {\r\n  return (\r\n    <div\r\n      className=\"list\"\r\n      id={props.listDetails.id}\r\n      edit={props.listDetails.edit}\r\n    >\r\n      <DeleteIcon removeList={props.removeList} />\r\n      <Title title={props.listDetails.title} />\r\n      <TodoItems\r\n        removeTodo={props.removeTodo}\r\n        todos={props.listDetails.todos}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleList;\r\n","import React from 'react';\r\nimport '../styles/TaskHolder.css';\r\nimport Empty from './Empty';\r\nimport SingleList from './SingleList';\r\n\r\nfunction TaskHolder(props) {\r\n  if (!props.lists.length) {\r\n    return <Empty />;\r\n  } else {\r\n    props.lists.sort(\r\n      props.sort === 'asc' ? props.compareAsc : props.compareDesc\r\n    );\r\n\r\n    return (\r\n      <div className=\"task-holder\">\r\n        {props.lists.map(list => {\r\n          return (\r\n            <SingleList\r\n              removeTodo={props.removeTodo}\r\n              removeList={props.removeList}\r\n              key={list.id}\r\n              listDetails={list}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskHolder;\r\n","import React from 'react';\r\nimport '../styles/ClearAll.css';\r\nfunction ClearAll(props) {\r\n  if (!props.lists.length) {\r\n    return null;\r\n  } else\r\n    return (\r\n      <div className='clear-btn-cont'>\r\n        <button\r\n          onClick={() => {\r\n            props.clearAll();\r\n          }}\r\n          className=\"clear-all-btn\"\r\n        >\r\n          Clear All\r\n        </button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ClearAll;\r\n","import React, { useState, useEffect } from 'react';\n\nimport Header from './Header';\nimport Sort from './Sort';\nimport '../styles/TodoApp.css';\nimport TaskHolder from './TaskHolder';\nimport ClearAll from './ClearAll';\n\nfunction TodoApp() {\n  const [inputText, setInput] = useState('');\n  const [lists, setLists] = useState(() => {\n    const lsLists = JSON.parse(localStorage.getItem('Lists'));\n    return lsLists ? lsLists : [];\n  });\n  const [sort, setSort] = useState('asc');\n\n  function setInputTextHandler(e) {\n    const value = e.target.value;\n    setInput(value);\n  }\n\n  function setListInformationHandler(id, title) {\n    setLists(\n      lists.concat([\n        {\n          id: id,\n          edit: id,\n          title: title,\n          todos: [],\n        },\n      ])\n    );\n  }\n\n  useEffect(() => {\n    localStorage.setItem('Lists', JSON.stringify(lists));\n  });\n\n  function createTaskAndListHandler(id, title) {\n    setLists([\n      {\n        id: id,\n        edit: id,\n        title: title,\n        todos: [{ todoID: `${id + 1}`, todoText: inputText }],\n      },\n    ]);\n    setInput('');\n  }\n  function setTaskToListHandler(targetList, id) {\n    const editTimestamp = new Date().getTime();\n\n    setLists(\n      lists.map(list => {\n        if (list.id !== targetList) return list;\n\n        return {\n          ...list,\n          todos: [...list.todos, { todoID: id, todoText: inputText }],\n          edit: editTimestamp,\n        };\n      })\n    );\n    setInput('');\n  }\n\n  function removeListHandler(id) {\n    setLists(\n      lists.filter(list => {\n        return list.id !== id;\n      })\n    );\n  }\n\n  function removeTodoHandler(listID, todoID) {\n    const editTimestamp = new Date().getTime();\n\n    setLists(\n      lists.map(list => {\n        if (list.id !== listID) return list;\n        return {\n          ...list,\n          todos: list.todos.filter(todo => {\n            return parseInt(todo.todoID) !== todoID;\n          }),\n          edit: editTimestamp,\n        };\n      })\n    );\n  }\n  function clearAllHandler() {\n    setLists([]);\n  }\n\n  function compareAsc(a, b) {\n    return b.edit - a.edit;\n  }\n\n  function compareDesc(a, b) {\n    return a.edit - b.edit;\n  }\n  return (\n    <div className=\"TodoApp\">\n      <Header\n        inputText={inputText}\n        setListInformation={setListInformationHandler}\n        setInputText={setInputTextHandler}\n        setTaskToList={setTaskToListHandler}\n        createTaskAndList={createTaskAndListHandler}\n        lists={lists}\n        compareAsc={compareAsc}\n        compareDesc={compareDesc}\n        sort={sort}\n      />\n      <Sort lists={lists} setLists={setLists} sort={sort} setSort={setSort} />\n      <TaskHolder\n        removeTodo={removeTodoHandler}\n        removeList={removeListHandler}\n        lists={lists}\n        sort={sort}\n        setLists={setLists}\n        compareAsc={compareAsc}\n        compareDesc={compareDesc}\n      />\n\n      <ClearAll lists={lists} clearAll={clearAllHandler} />\n    </div>\n  );\n}\n\nexport default TodoApp;\n","import React from 'react';\r\nimport '../styles/Form.css';\r\nfunction Form(props) {\r\n  return (\r\n    <div id=\"input\">\r\n      <form autoComplete=\"off\">\r\n        <label htmlFor=\"country\">\r\n          Please write the country you want stats for!\r\n        </label>\r\n        <input\r\n          className=\"text-field\"\r\n          onInput={e => {\r\n            const value = e.target.value;\r\n            props.searchText(value);\r\n            props.setOpen(true);\r\n          }}\r\n          type=\"text\"\r\n          id=\"country\"\r\n          placeholder=\"i.e. Serbia, India, Russia...\"\r\n          required\r\n          onChange={e => {\r\n            const value = e.target.value;\r\n\r\n            props.setInputText(value);\r\n          }}\r\n          onClick={() => {\r\n            props.getCountriesOnStart();\r\n            props.setOpen(true);\r\n          }}\r\n        ></input>\r\n        {props.open && props.sugCountries.length > 0 ? (\r\n          <div\r\n            className=\"results\"\r\n            onMouseLeave={() => {\r\n              props.setOpen(false);\r\n            }}\r\n          >\r\n            <ul className=\"result-list\">\r\n              {props.sugCountries.map(country => {\r\n                return (\r\n                  <div\r\n                    key={country.Country}\r\n                    onClick={e => {\r\n                      const value = e.target.textContent;\r\n                      props.setInputText(value);\r\n                      document.querySelector('input[type=\"text\"]').value =\r\n                        value;\r\n                      props.setOpen(false);\r\n                    }}\r\n                  >\r\n                    {country.Country}\r\n                  </div>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        ) : null}\r\n\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Get Data!\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n\r\n            props.getData(props.inputText);\r\n            props.setInputText('');\r\n            document.querySelector('input[type=\"text\"]').value = '';\r\n            props.setOpen(false);\r\n          }}\r\n          className=\"submit-input\"\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Nav() {\r\n  return (\r\n    <nav>\r\n      <h2>MultiApp</h2>\r\n      <ul className=\"home-list\">\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/covid-tracker\">COVID Tracker</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/todo-app\">Todo App</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport Nav from './Nav';\r\nimport '../styles/Home.css';\r\nfunction Home() {\r\n  return (\r\n    <div className=\"homepage\">\r\n      <Nav />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport '../styles/Information.css';\r\nfunction Information(props) {\r\n  return (\r\n    <div className=\"holder\">\r\n      <h2 className=\"country-display\">{props.info.country}</h2>\r\n      <div className=\"information-box\">\r\n        <div className=\"confirmed\">\r\n          <h2>Number of confirmed cases</h2>\r\n          <h4 className=\"confirmed-cases\">{props.info.confirmed}</h4>\r\n        </div>\r\n\r\n        <div className=\"active\">\r\n          <h2>Number of active cases</h2>\r\n          <h4 className=\"active-cases\">{props.info.active}</h4>\r\n        </div>\r\n        <div className=\"death\">\r\n          <h2>Number of death cases</h2>\r\n          <h4 className=\"death-cases\">{props.info.deaths}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Information;\r\n","import React, { useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport '../styles/App.css';\nimport TodoApp from './react_todo_main/src/components/TodoApp';\nimport Form from './Form';\nimport Home from './Home';\nimport Information from './Information';\n\nfunction App() {\n  const [inputText, setInput] = useState('');\n  const [info, setInfo] = useState({\n    country: 'Please specify a country!',\n    confirmed: 0,\n    active: 0,\n    deaths: 0,\n  });\n  const [sugCountries, setSugCountries] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  function getCountriesOnStart() {\n    fetch('https://api.covid19api.com/countries')\n      .then(res => res.json())\n      .then(data => {\n        const sugData = data.slice(25, 33);\n        setSugCountries([...sugData]);\n      });\n  }\n\n  function setInputHandler(value) {\n    setInput(value.toLowerCase());\n  }\n  function getDataHandler(inputText) {\n    let data;\n    const input = inputText;\n    const url = 'https://api.covid19api.com/total/dayone/country/' + input;\n    if (input) {\n      fetch(url)\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            throw new Error('Something went wrong');\n          }\n        })\n        .then(res => {\n          data = res[res.length - 1];\n\n          if (data) {\n            setInfo({\n              country: data.Country,\n              confirmed: data.Confirmed.toLocaleString(),\n              active: data.Active.toLocaleString(),\n              deaths: data.Deaths.toLocaleString(),\n            });\n          }\n        })\n        .catch(error => {\n          console.log(error);\n          alert('Please enter a valid country!');\n        });\n    }\n  }\n  function searchTexthandler(value) {\n    fetch('https://api.covid19api.com/countries')\n      .then(res => res.json())\n      .then(data => {\n        let filtered = data.filter(d => {\n          if (!value) {\n            let filtered = [];\n          } else {\n            const regex = new RegExp(`^${value}`, 'gi');\n\n            return d.Country.match(regex);\n          }\n        });\n        setSugCountries([...filtered]);\n      });\n  }\n  return (\n    <div className=\"App\">\n      <Home />\n      <Routes>\n        <Route\n          path=\"/covid-tracker\"\n          element={[\n            <Form\n              key={'covidTracker'}\n              getData={getDataHandler}\n              inputText={inputText}\n              setInputText={setInputHandler}\n              sugCountries={sugCountries}\n              getCountriesOnStart={getCountriesOnStart}\n              open={open}\n              setOpen={setOpen}\n              searchText={searchTexthandler}\n            />,\n            <Information key={'covidTracker2'} setOpen={setOpen} info={info} />,\n          ]}\n        />\n        <Route path=\"/todo-app\" element={<TodoApp />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}