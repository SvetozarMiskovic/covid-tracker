{"version":3,"sources":["components/Form.js","components/Information.js","components/App.js","reportWebVitals.js","index.js"],"names":["Form","props","id","autoComplete","htmlFor","onInput","e","value","target","searchText","setOpen","type","placeholder","required","onChange","setInputText","onClick","getCountriesOnStart","open","sugCountries","length","className","onMouseLeave","map","country","textContent","document","querySelector","Country","preventDefault","getData","inputText","Information","info","confirmed","active","deaths","App","useState","setInput","setInfo","setSugCountries","data","fetch","then","res","ok","json","Error","Confirmed","toLocaleString","Active","Deaths","catch","error","console","log","alert","toLowerCase","sugData","slice","filtered","filter","d","regex","RegExp","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.01de8db9.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Form.css';\r\nfunction Form(props) {\r\n  return (\r\n    <div id=\"input\">\r\n      <form autoComplete=\"off\">\r\n        <label htmlFor=\"country\">\r\n          Please write the country you want stats for!\r\n        </label>\r\n        <input\r\n          onInput={e => {\r\n            const value = e.target.value;\r\n            props.searchText(value);\r\n            props.setOpen(true);\r\n          }}\r\n          type=\"text\"\r\n          id=\"country\"\r\n          placeholder=\"i.e. Serbia, India, Russia...\"\r\n          required\r\n          onChange={e => {\r\n            const value = e.target.value;\r\n\r\n            props.setInputText(value);\r\n          }}\r\n          onClick={() => {\r\n            props.getCountriesOnStart();\r\n            props.setOpen(true);\r\n          }}\r\n        ></input>\r\n        {props.open && props.sugCountries.length > 0 ? (\r\n          <div\r\n            className=\"results\"\r\n            onMouseLeave={() => {\r\n              props.setOpen(false);\r\n            }}\r\n          >\r\n            <ul>\r\n              {props.sugCountries.map(country => {\r\n                return (\r\n                  <div\r\n                    key={country.Country}\r\n                    onClick={e => {\r\n                      const value = e.target.textContent;\r\n                      props.setInputText(value);\r\n                      document.querySelector('input[type=\"text\"]').value =\r\n                        value;\r\n                      props.setOpen(false);\r\n                    }}\r\n                  >\r\n                    {country.Country}\r\n                  </div>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        ) : null}\r\n\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Get Data!\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n\r\n            props.getData(props.inputText);\r\n            props.setInputText('');\r\n            document.querySelector('input[type=\"text\"]').value = '';\r\n            props.setOpen(false);\r\n          }}\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport '../styles/Information.css';\r\nfunction Information(props) {\r\n  return (\r\n    <div className=\"holder\">\r\n      <h2 className=\"country-display\">{props.info.country}</h2>\r\n      <div className=\"information-box\">\r\n        <div className=\"confirmed\">\r\n          <h2>Number of confirmed cases</h2>\r\n          <h4 className=\"confirmed-cases\">{props.info.confirmed}</h4>\r\n        </div>\r\n\r\n        <div className=\"active\">\r\n          <h2>Number of active cases</h2>\r\n          <h4 className=\"active-cases\">{props.info.active}</h4>\r\n        </div>\r\n        <div className=\"death\">\r\n          <h2>Number of death cases</h2>\r\n          <h4 className=\"death-cases\">{props.info.deaths}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Information;\r\n","import React, { useState } from 'react';\nimport '../styles/App.css';\nimport Form from './Form';\nimport Information from './Information';\nfunction App() {\n  const [inputText, setInput] = useState('');\n  const [info, setInfo] = useState({\n    country: 'Please specify a country!',\n    confirmed: 0,\n    active: 0,\n    deaths: 0,\n  });\n  const [sugCountries, setSugCountries] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  function getCountriesOnStart() {\n    fetch('https://api.covid19api.com/countries')\n      .then(res => res.json())\n      .then(data => {\n        const sugData = data.slice(25, 33);\n        setSugCountries([...sugData]);\n      });\n  }\n\n  function setInputHandler(value) {\n    setInput(value.toLowerCase());\n  }\n  function getDataHandler(inputText) {\n    let data;\n    const input = inputText;\n    const url = 'https://api.covid19api.com/total/dayone/country/' + input;\n    if (input) {\n      fetch(url)\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            throw new Error('Something went wrong');\n          }\n        })\n        .then(res => {\n          data = res[res.length - 1];\n\n          if (data) {\n            setInfo({\n              country: data.Country,\n              confirmed: data.Confirmed.toLocaleString(),\n              active: data.Active.toLocaleString(),\n              deaths: data.Deaths.toLocaleString(),\n            });\n          }\n        })\n        .catch(error => {\n          console.log(error);\n          alert('Please enter a valid country!');\n        });\n    }\n  }\n  function searchTexthandler(value) {\n    fetch('https://api.covid19api.com/countries')\n      .then(res => res.json())\n      .then(data => {\n        let filtered = data.filter(d => {\n          if (value.length === 0) {\n            let filtered = [];\n          } else {\n            const regex = new RegExp(`^${value}`, 'gi');\n\n            return d.Country.match(regex);\n          }\n        });\n        setSugCountries([...filtered]);\n      });\n  }\n  return (\n    <div className=\"App\">\n      <Form\n        getData={getDataHandler}\n        inputText={inputText}\n        setInputText={setInputHandler}\n        sugCountries={sugCountries}\n        getCountriesOnStart={getCountriesOnStart}\n        open={open}\n        setOpen={setOpen}\n        searchText={searchTexthandler}\n      />\n      <Information setOpen={setOpen} info={info} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}