{"version":3,"sources":["components/CompareInputs.js","components/CompareResults.js","components/Compare.js","components/react_todo_main/src/components/Option.js","components/react_todo_main/src/components/Create&SelectList.js","components/react_todo_main/src/components/TodoInput.js","components/react_todo_main/src/components/Header.js","components/react_todo_main/src/components/Sort.js","components/react_todo_main/src/components/Empty.js","components/react_todo_main/src/components/Title.js","components/react_todo_main/src/components/DeleteIcon.js","components/react_todo_main/src/components/ListItem.js","components/react_todo_main/src/components/TodoItems.js","components/react_todo_main/src/components/SingleList.js","components/react_todo_main/src/components/TaskHolder.js","components/react_todo_main/src/components/ClearAll.js","components/react_todo_main/src/components/TodoApp.js","components/Form.js","components/Nav.js","components/Home.js","components/Information.js","components/HomeBody.js","components/App.js","reportWebVitals.js","index.js"],"names":["CompareInputs","props","className","autoComplete","id","type","placeholder","onInput","e","value","target","searchText","setCompareOne","onClick","getCountriesOnStart","onChange","setInput1","showCompareOne","sugCountries","length","onMouseLeave","map","country","textContent","document","querySelector","Country","setCompareTwo","setInput2","showCompareTwo","getData1","input1","getData2","input2","CompareResults","info1","confirmed","active","deaths","info2","parseInt","replace","confirmed2","active2","deaths2","convertAndSetString","Compare","useState","setInfo1","setInfo2","toLowerCase","inputText","data","fetch","then","res","ok","json","Error","Confirmed","toLocaleString","Active","Deaths","catch","error","console","log","alert","Option","listDetails","title","CreateSelectList","lists","sort","compareAsc","compareDesc","listName","prompt","timestamp","Date","getTime","setListInformation","name","list","TodoInput","htmlFor","setInputText","querySelectorAll","targetList","getElementById","setTaskToList","createTaskAndList","Header","Sort","setSort","Empty","Title","DeleteIcon","element","removeList","parentElement","ListItem","todo","todoID","edit","todoText","listID","removeTodo","TodoItems","todos","SingleList","TaskHolder","ClearAll","clearAll","TodoApp","setInput","lsLists","JSON","parse","localStorage","getItem","setLists","a","b","useEffect","setItem","stringify","concat","editTimestamp","filter","Form","setOpen","required","open","preventDefault","getData","Nav","to","Home","Information","info","HomeBody","App","setInfo","setSugCountries","sugData","slice","searchTexthandler","filtered","d","regex","RegExp","match","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e827cd6a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport '../styles/CompareInputs.css';\r\nfunction CompareInputs(props) {\r\n  return (\r\n    <div className=\"compare-inputs\">\r\n      <h4 className=\"compare-input-title\">\r\n        Please choose two countries to compare!\r\n      </h4>\r\n      <div className=\"compare-box-1\">\r\n        <input\r\n          autoComplete=\"off\"\r\n          id=\"compare-input-1\"\r\n          type=\"text\"\r\n          placeholder=\"Enter first country\"\r\n          onInput={e => {\r\n            const value = e.target.value;\r\n            props.searchText(value);\r\n            props.setCompareOne(true);\r\n          }}\r\n          onClick={() => {\r\n            props.getCountriesOnStart();\r\n            props.setCompareOne(true);\r\n          }}\r\n          onChange={e => {\r\n            const value = e.target.value;\r\n            props.setInput1(value);\r\n          }}\r\n        ></input>\r\n        {props.showCompareOne && props.sugCountries.length > 0 ? (\r\n          <div\r\n            onMouseLeave={() => {\r\n              props.setCompareOne(false);\r\n            }}\r\n            className=\"suggestion-box-1\"\r\n          >\r\n            <ul className=\"compare-search-result-1\">\r\n              {props.sugCountries.map(country => {\r\n                return (\r\n                  <div\r\n                    key={country.Country}\r\n                    onClick={e => {\r\n                      const value = e.target.textContent;\r\n                      props.setInput1(value);\r\n                      document.querySelector('#compare-input-1').value = value;\r\n                      props.setCompareOne(false);\r\n                    }}\r\n                  >\r\n                    {country.Country}\r\n                  </div>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"compare-box-2\">\r\n        <input\r\n          autoComplete=\"off\"\r\n          id=\"compare-input-2\"\r\n          type=\"text\"\r\n          placeholder=\"Enter second country\"\r\n          onInput={e => {\r\n            const value = e.target.value;\r\n            props.searchText(value);\r\n            props.setCompareTwo(true);\r\n          }}\r\n          onClick={() => {\r\n            props.setCompareTwo(true);\r\n          }}\r\n          onChange={e => {\r\n            const value = e.target.value;\r\n            props.setInput2(value);\r\n          }}\r\n          onClick={() => {\r\n            props.getCountriesOnStart();\r\n            props.setCompareTwo(true);\r\n          }}\r\n        ></input>\r\n        {props.showCompareTwo && props.sugCountries.length > 0 ? (\r\n          <div\r\n            onMouseLeave={() => {\r\n              props.setCompareTwo(false);\r\n            }}\r\n            className=\"suggestion-box-2\"\r\n          >\r\n            <ul className=\"compare-search-result-2\">\r\n              {props.sugCountries.map(country => {\r\n                return (\r\n                  <div\r\n                    key={country.Country}\r\n                    onClick={e => {\r\n                      const value = e.target.textContent;\r\n                      props.setInput2(value);\r\n                      document.querySelector('#compare-input-2').value = value;\r\n                      props.setCompareTwo(false);\r\n                    }}\r\n                  >\r\n                    {country.Country}\r\n                  </div>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <button\r\n        className=\"compare-btn\"\r\n        type=\"click\"\r\n        onClick={() => {\r\n          props.getData1(props.input1);\r\n          props.getData2(props.input2);\r\n          props.setInput1('');\r\n          props.setInput2('');\r\n          document.querySelector('#compare-input-1').value = '';\r\n          document.querySelector('#compare-input-2').value = '';\r\n          props.setCompareOne(false);\r\n          props.setCompareTwo(false);\r\n        }}\r\n      >\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompareInputs;\r\n","import React from 'react';\r\n\r\nimport '../styles/CompareResults.css';\r\n\r\nfunction CompareResults(props) {\r\n  function convertAndSetString(info1, info2) {\r\n    const confirmed = parseInt(info1.confirmed?.replace(/\\D/g, ''));\r\n    const active = parseInt(info1.active?.replace(/\\D/g, ''));\r\n    const deaths = parseInt(info1.deaths?.replace(/\\D/g, ''));\r\n\r\n    const confirmed2 = parseInt(info2.confirmed?.replace(/\\D/g, ''));\r\n    const active2 = parseInt(info2.active?.replace(/\\D/g, ''));\r\n    const deaths2 = parseInt(info2.deaths?.replace(/\\D/g, ''));\r\n\r\n    if ((confirmed, confirmed2, active, active2, deaths, deaths2)) {\r\n      return `\r\n    \r\n      Currently, ${\r\n        confirmed > confirmed2 ? info1.country : info2.country\r\n      } has worse statistics as it has ${\r\n        confirmed > confirmed2 ? confirmed - confirmed2 : confirmed2 - confirmed\r\n      } more confirmed cases, ${\r\n        active > active2 ? active - active2 : active2 - active\r\n      } more active cases and ${\r\n        deaths > deaths2 ? deaths - deaths2 : deaths2 - deaths\r\n      } more deaths!\r\n    \r\n    `;\r\n    } else return 'Please select countries!';\r\n  }\r\n\r\n  return (\r\n    <div className=\"compare-results\">\r\n      <div className=\"compare-country-summary\">\r\n        <div className=\"first-country\">\r\n          <h4 className=\"first-country-name\">Name: {props.info1.country}</h4>\r\n          <p className=\"first-country-confirmed\">\r\n            Confirmed: {props.info1.confirmed}\r\n          </p>\r\n          <p className=\"first-country-active\">Active: {props.info1.active}</p>\r\n          <p className=\"first-country-deaths\">Deaths: {props.info1.deaths}</p>\r\n        </div>\r\n        <div className=\"second-country\">\r\n          <h4 className=\"second-country-name\">Name: {props.info2.country}</h4>\r\n          <p className=\"second-country-confirmed\">\r\n            Confirmed: {props.info2.confirmed}\r\n          </p>\r\n          <p className=\"second-country-active\">Active: {props.info2.active}</p>\r\n          <p className=\"second-country-deaths\">Deaths: {props.info2.deaths}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"compare-conclusion\">\r\n        {convertAndSetString(props.info1, props.info2)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompareResults;\r\n","import React, { useState } from 'react';\r\nimport CompareInputs from './CompareInputs';\r\nimport '../styles/Compare.css';\r\nimport CompareResults from './CompareResults';\r\nfunction Compare(props) {\r\n  const [showCompareOne, setCompareOne] = useState(false);\r\n  const [showCompareTwo, setCompareTwo] = useState(false);\r\n  const [info1, setInfo1] = useState({});\r\n  const [info2, setInfo2] = useState({});\r\n  const [input1, setInput1] = useState('');\r\n  const [input2, setInput2] = useState('');\r\n\r\n  function setInput1Handler(value) {\r\n    setInput1(value.toLowerCase());\r\n  }\r\n\r\n  function setInput2Handler(value) {\r\n    setInput2(value.toLowerCase());\r\n  }\r\n\r\n  function getDataHandler1(inputText) {\r\n    let data;\r\n    const input = inputText;\r\n    const url = 'https://api.covid19api.com/total/dayone/country/' + input;\r\n    if (input) {\r\n      fetch(url)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          } else {\r\n            throw new Error('Something went wrong');\r\n          }\r\n        })\r\n        .then(res => {\r\n          data = res[res.length - 1];\r\n\r\n          if (data) {\r\n            setInfo1({\r\n              country: data.Country,\r\n              confirmed: data.Confirmed.toLocaleString(),\r\n              active: data.Active.toLocaleString(),\r\n              deaths: data.Deaths.toLocaleString(),\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          alert('Please enter a valid country!');\r\n        });\r\n    }\r\n  }\r\n\r\n  function getDataHandler2(inputText) {\r\n    let data;\r\n    const input = inputText;\r\n    const url = 'https://api.covid19api.com/total/dayone/country/' + input;\r\n    if (input) {\r\n      fetch(url)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          } else {\r\n            throw new Error('Something went wrong');\r\n          }\r\n        })\r\n        .then(res => {\r\n          data = res[res.length - 1];\r\n\r\n          if (data) {\r\n            setInfo2({\r\n              country: data.Country,\r\n              confirmed: data.Confirmed.toLocaleString(),\r\n              active: data.Active.toLocaleString(),\r\n              deaths: data.Deaths.toLocaleString(),\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          alert('Please enter a valid country!');\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"compare-holder\">\r\n      <CompareInputs\r\n        showCompareOne={showCompareOne}\r\n        showCompareTwo={showCompareTwo}\r\n        setCompareOne={setCompareOne}\r\n        setCompareTwo={setCompareTwo}\r\n        setInput1={setInput1Handler}\r\n        setInput2={setInput2Handler}\r\n        getCountriesOnStart={props.getCountriesOnStart}\r\n        sugCountries={props.sugCountries}\r\n        searchText={props.searchText}\r\n        getData1={getDataHandler1}\r\n        getData2={getDataHandler2}\r\n        input1={input1}\r\n        input2={input2}\r\n        info1={info1}\r\n        info2={info2}\r\n      />\r\n      <CompareResults\r\n        info1={info1}\r\n        info2={info2}\r\n        setInfo1={setInfo1}\r\n        setInfo2={setInfo2}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Compare;\r\n","import React from 'react';\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <option id={props.listDetails.id} value={props.listDetails.id}>\r\n      {props.listDetails.title}\r\n    </option>\r\n  );\r\n}\r\n\r\nexport default Option;\r\n","import React from 'react';\r\nimport '../styles/Create&SelectList.css';\r\nimport Option from './Option';\r\n\r\nfunction CreateSelectList(props) {\r\n  props.lists.sort(props.sort === 'asc' ? props.compareAsc : props.compareDesc);\r\n  return (\r\n    <div className=\"todo-select\">\r\n      <button\r\n        onClick={() => {\r\n          const listName = prompt('Please name your list!', 'New List');\r\n          if (listName) {\r\n            const timestamp = new Date().getTime();\r\n            props.setListInformation(timestamp, listName);\r\n          } else return;\r\n        }}\r\n        type=\"button\"\r\n        className=\"newListBtn\"\r\n      >\r\n        Create a list\r\n      </button>\r\n\r\n      <select name=\"select-list\" id=\"select-list\">\r\n        {props.lists.map(list => {\r\n          return <Option key={list.id} listDetails={list} />;\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateSelectList;\r\n","import React from 'react';\r\nimport '../styles/TodoInput.css';\r\nfunction TodoInput(props) {\r\n  return (\r\n    <div className=\"todo-input\">\r\n      <label htmlFor=\"todoInput\">Add a daily task!</label>\r\n      <input\r\n        className=\"input-field\"\r\n        autoComplete=\"off\"\r\n        type=\"text\"\r\n        name=\"todoInput\"\r\n        id=\"todoInput\"\r\n        placeholder=\"Write something...\"\r\n        onChange={props.setInputText}\r\n      />\r\n      <input\r\n        onClick={() => {\r\n          const timestamp = new Date().getTime();\r\n          if (document.querySelectorAll('.list').length > 0) {\r\n            if (props.inputText) {\r\n              const targetList = parseInt(\r\n                document.getElementById('select-list').value\r\n              );\r\n              props.setTaskToList(targetList, timestamp);\r\n\r\n              document.querySelector('input[type=text]').value = '';\r\n            }\r\n          } else {\r\n            if (props.inputText) {\r\n              const listName = prompt('Please name your list!', 'New List');\r\n              props.createTaskAndList(timestamp, listName);\r\n              document.querySelector('input[type=text]').value = '';\r\n            }\r\n          }\r\n        }}\r\n        type=\"submit\"\r\n        id=\"submitBtn\"\r\n        value=\"Add a task\"\r\n        className=\"input-submit\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoInput;\r\n","import React from 'react';\r\nimport CreateSelectList from './Create&SelectList';\r\nimport TodoInput from './TodoInput';\r\n\r\nimport '../styles/Header.css';\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <TodoInput\r\n        inputText={props.inputText}\r\n        setTaskToList={props.setTaskToList}\r\n        setInputText={props.setInputText}\r\n        setListInformation={props.setListInformation}\r\n        createTaskAndList={props.createTaskAndList}\r\n      />\r\n      <CreateSelectList\r\n        lists={props.lists}\r\n        setListInformation={props.setListInformation}\r\n        compareAsc={props.compareAsc}\r\n        compareDesc={props.compareDesc}\r\n        sort={props.sort}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../styles/Sort.css';\r\nfunction Sort(props) {\r\n  return (\r\n    <div className=\"sort\">\r\n      <label htmlFor=\"sort\">Sort by:</label>\r\n      <select\r\n        onChange={() => {\r\n          props.sort === 'asc' ? props.setSort('desc') : props.setSort('asc');\r\n        }}\r\n        name=\"sort\"\r\n        id=\"sort\"\r\n      >\r\n        <option value=\"Newest updates\">Newest updates</option>\r\n        <option value=\"Oldest updates\">Oldest updates</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\nimport '../styles/Empty.css';\r\nfunction Empty() {\r\n  return (\r\n    <div className=\"empty\">\r\n      <h2 className=\"empty-text\">There are no lists created!</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Empty;\r\n","import React from 'react';\r\nimport '../styles/Title.css';\r\nfunction Title(props) {\r\n  return <h2 className=\"title\">{props.title}</h2>;\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport '../styles/DeleteIcon.css';\r\nfunction DeleteIcon(props) {\r\n  return (\r\n    <i\r\n      onClick={e => {\r\n        const element = e.target;\r\n\r\n        props.removeList(parseInt(element.parentElement.id));\r\n      }}\r\n      className=\"fas fa-trash-alt deleteList\"\r\n    ></i>\r\n  );\r\n}\r\n\r\nexport default DeleteIcon;\r\n","import React from 'react';\r\n\r\nfunction ListItem(props) {\r\n  return (\r\n    <li className=\"single-item\" id={props.todo.todoID} edit=\"\">\r\n      <span>{props.todo.todoText}</span>\r\n      <i\r\n        onClick={e => {\r\n          const element = e.target;\r\n          const todoID = parseInt(element.parentElement.id);\r\n          const list = element.parentElement.parentElement.parentElement;\r\n          const listID = parseInt(list.id);\r\n\r\n          props.removeTodo(listID, todoID);\r\n        }}\r\n        className=\"fas fa-trash-alt deleteItem\"\r\n      ></i>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport '../styles/TodoItems.css';\r\nimport ListItem from './ListItem';\r\n\r\nfunction TodoItems(props) {\r\n  return (\r\n    <ul className=\"items-list\">\r\n      {props.todos.map(todo => {\r\n        return (\r\n          <ListItem\r\n            removeTodo={props.removeTodo}\r\n            key={todo.todoID}\r\n            todo={todo}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoItems;\r\n","import React from 'react';\r\nimport '../styles/SingleList.css';\r\nimport Title from './Title';\r\nimport DeleteIcon from './DeleteIcon';\r\nimport TodoItems from './TodoItems';\r\nfunction SingleList(props) {\r\n  return (\r\n    <div\r\n      className=\"list\"\r\n      id={props.listDetails.id}\r\n      edit={props.listDetails.edit}\r\n    >\r\n      <DeleteIcon removeList={props.removeList} />\r\n      <Title title={props.listDetails.title} />\r\n      <TodoItems\r\n        removeTodo={props.removeTodo}\r\n        todos={props.listDetails.todos}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleList;\r\n","import React from 'react';\r\nimport '../styles/TaskHolder.css';\r\nimport Empty from './Empty';\r\nimport SingleList from './SingleList';\r\n\r\nfunction TaskHolder(props) {\r\n  if (!props.lists.length) {\r\n    return <Empty />;\r\n  } else {\r\n    props.lists.sort(\r\n      props.sort === 'asc' ? props.compareAsc : props.compareDesc\r\n    );\r\n\r\n    return (\r\n      <div className=\"task-holder\">\r\n        {props.lists.map(list => {\r\n          return (\r\n            <SingleList\r\n              removeTodo={props.removeTodo}\r\n              removeList={props.removeList}\r\n              key={list.id}\r\n              listDetails={list}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskHolder;\r\n","import React from 'react';\r\nimport '../styles/ClearAll.css';\r\nfunction ClearAll(props) {\r\n  if (!props.lists.length) {\r\n    return null;\r\n  } else\r\n    return (\r\n      <div className='clear-btn-cont'>\r\n        <button\r\n          onClick={() => {\r\n            props.clearAll();\r\n          }}\r\n          className=\"clear-all-btn\"\r\n        >\r\n          Clear All\r\n        </button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ClearAll;\r\n","import React, { useState, useEffect } from 'react';\n\nimport Header from './Header';\nimport Sort from './Sort';\nimport '../styles/TodoApp.css';\nimport TaskHolder from './TaskHolder';\nimport ClearAll from './ClearAll';\n\nfunction TodoApp() {\n  const [inputText, setInput] = useState('');\n  const [lists, setLists] = useState(() => {\n    const lsLists = JSON.parse(localStorage.getItem('Lists'));\n    return lsLists ? lsLists : [];\n  });\n  const [sort, setSort] = useState('asc');\n\n  function setInputTextHandler(e) {\n    const value = e.target.value;\n    setInput(value);\n  }\n\n  function setListInformationHandler(id, title) {\n    setLists(\n      lists.concat([\n        {\n          id: id,\n          edit: id,\n          title: title,\n          todos: [],\n        },\n      ])\n    );\n  }\n\n  useEffect(() => {\n    localStorage.setItem('Lists', JSON.stringify(lists));\n  });\n\n  function createTaskAndListHandler(id, title) {\n    setLists([\n      {\n        id: id,\n        edit: id,\n        title: title,\n        todos: [{ todoID: `${id + 1}`, todoText: inputText }],\n      },\n    ]);\n    setInput('');\n  }\n  function setTaskToListHandler(targetList, id) {\n    const editTimestamp = new Date().getTime();\n\n    setLists(\n      lists.map(list => {\n        if (list.id !== targetList) return list;\n\n        return {\n          ...list,\n          todos: [...list.todos, { todoID: id, todoText: inputText }],\n          edit: editTimestamp,\n        };\n      })\n    );\n    setInput('');\n  }\n\n  function removeListHandler(id) {\n    setLists(\n      lists.filter(list => {\n        return list.id !== id;\n      })\n    );\n  }\n\n  function removeTodoHandler(listID, todoID) {\n    const editTimestamp = new Date().getTime();\n\n    setLists(\n      lists.map(list => {\n        if (list.id !== listID) return list;\n        return {\n          ...list,\n          todos: list.todos.filter(todo => {\n            return parseInt(todo.todoID) !== todoID;\n          }),\n          edit: editTimestamp,\n        };\n      })\n    );\n  }\n  function clearAllHandler() {\n    setLists([]);\n  }\n\n  function compareAsc(a, b) {\n    return b.edit - a.edit;\n  }\n\n  function compareDesc(a, b) {\n    return a.edit - b.edit;\n  }\n  return (\n    <div className=\"TodoApp\">\n      <Header\n        inputText={inputText}\n        setListInformation={setListInformationHandler}\n        setInputText={setInputTextHandler}\n        setTaskToList={setTaskToListHandler}\n        createTaskAndList={createTaskAndListHandler}\n        lists={lists}\n        compareAsc={compareAsc}\n        compareDesc={compareDesc}\n        sort={sort}\n      />\n      <Sort lists={lists} setLists={setLists} sort={sort} setSort={setSort} />\n      <TaskHolder\n        removeTodo={removeTodoHandler}\n        removeList={removeListHandler}\n        lists={lists}\n        sort={sort}\n        setLists={setLists}\n        compareAsc={compareAsc}\n        compareDesc={compareDesc}\n      />\n\n      <ClearAll lists={lists} clearAll={clearAllHandler} />\n    </div>\n  );\n}\n\nexport default TodoApp;\n","import React from 'react';\r\nimport '../styles/Form.css';\r\n\r\nfunction Form(props) {\r\n  return (\r\n    <div id=\"input\">\r\n      <form autoComplete=\"off\">\r\n        <label htmlFor=\"country\">\r\n          Please write the country you want stats for!\r\n        </label>\r\n        <input\r\n          className=\"text-field\"\r\n          onInput={e => {\r\n            const value = e.target.value;\r\n            props.searchText(value);\r\n            props.setOpen(true);\r\n          }}\r\n          type=\"text\"\r\n          id=\"country\"\r\n          placeholder=\"i.e. Serbia, India, Russia...\"\r\n          required\r\n          onChange={e => {\r\n            const value = e.target.value;\r\n\r\n            props.setInputText(value);\r\n          }}\r\n          onClick={() => {\r\n            props.getCountriesOnStart();\r\n            props.setOpen(true);\r\n          }}\r\n        ></input>\r\n        {props.open && props.sugCountries.length > 0 ? (\r\n          <div\r\n            className=\"results\"\r\n            onMouseLeave={() => {\r\n              props.setOpen(false);\r\n            }}\r\n          >\r\n            <ul className=\"result-list\">\r\n              {props.sugCountries.map(country => {\r\n                return (\r\n                  <div\r\n                    key={country.Country}\r\n                    onClick={e => {\r\n                      const value = e.target.textContent;\r\n                      props.setInputText(value);\r\n                      document.querySelector('input[type=\"text\"]').value =\r\n                        value;\r\n                      props.setOpen(false);\r\n                    }}\r\n                  >\r\n                    {country.Country}\r\n                  </div>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        ) : null}\r\n\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Get Data!\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n\r\n            props.getData(props.inputText);\r\n            props.setInputText('');\r\n            document.querySelector('input[type=\"text\"]').value = '';\r\n            props.setOpen(false);\r\n          }}\r\n          className=\"submit-input\"\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Nav() {\r\n  return (\r\n    <nav>\r\n      <h2>\r\n        <span>Multi</span>App\r\n      </h2>\r\n      <ul className=\"home-list\">\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"multi-app/covid-tracker\">COVID Tracker</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"multi-app/todo-app\">Todo App</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport Nav from './Nav';\r\nimport '../styles/Home.css';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"homepage\">\r\n      <Nav />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport '../styles/Information.css';\r\nfunction Information(props) {\r\n  return (\r\n    <div className=\"holder\">\r\n      <h2 className=\"country-display\">{props.info.country}</h2>\r\n      <div className=\"information-box\">\r\n        <div className=\"confirmed\">\r\n          <h2>Number of confirmed cases</h2>\r\n          <h4 className=\"confirmed-cases\">{props.info.confirmed}</h4>\r\n        </div>\r\n\r\n        <div className=\"active\">\r\n          <h2>Number of active cases</h2>\r\n          <h4 className=\"active-cases\">{props.info.active}</h4>\r\n        </div>\r\n        <div className=\"death\">\r\n          <h2>Number of death cases</h2>\r\n          <h4 className=\"death-cases\">{props.info.deaths}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Information;\r\n","import React from 'react';\r\nimport '../styles/HomeBody.css';\r\n\r\nfunction HomeBody() {\r\n  return (\r\n    <div className=\"home-body\">\r\n      <h2>\r\n        Welcome to <span>Multi</span>App\r\n      </h2>\r\n      <h4>\r\n        MultiApp consists of COVID Tracker, which can be used to look up the\r\n        current numbers of cases in any country you want, and of Todo App which\r\n        allows you to write down your daily tasks to keep track of everything at\r\n        one place!\r\n      </h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeBody;\r\n","import React, { useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport Compare from './Compare';\nimport '../styles/App.css';\nimport TodoApp from './react_todo_main/src/components/TodoApp';\nimport Form from './Form';\nimport Home from './Home';\nimport Information from './Information';\nimport HomeBody from './HomeBody';\n\nfunction App() {\n  const [inputText, setInput] = useState('');\n  const [info, setInfo] = useState({\n    country: 'Please specify a country!',\n    confirmed: 0,\n    active: 0,\n    deaths: 0,\n  });\n  const [sugCountries, setSugCountries] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  function getCountriesOnStart() {\n    fetch('https://api.covid19api.com/countries')\n      .then(res => res.json())\n      .then(data => {\n        const sugData = data.slice(25, 33);\n        setSugCountries([...sugData]);\n      });\n  }\n\n  function setInputHandler(value) {\n    setInput(value.toLowerCase());\n  }\n  function getDataHandler(inputText) {\n    let data;\n    const input = inputText;\n    const url = 'https://api.covid19api.com/total/dayone/country/' + input;\n    if (input) {\n      fetch(url)\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            throw new Error('Something went wrong');\n          }\n        })\n        .then(res => {\n          data = res[res.length - 1];\n\n          if (data) {\n            setInfo({\n              country: data.Country,\n              confirmed: data.Confirmed.toLocaleString(),\n              active: data.Active.toLocaleString(),\n              deaths: data.Deaths.toLocaleString(),\n            });\n          }\n        })\n        .catch(error => {\n          console.log(error);\n          alert('Please enter a valid country!');\n        });\n    }\n  }\n  function searchTexthandler(value) {\n    fetch('https://api.covid19api.com/countries')\n      .then(res => res.json())\n      .then(data => {\n        let filtered = data.filter(d => {\n          if (!value) {\n            let filtered = [];\n          } else {\n            const regex = new RegExp(`^${value}`, 'gi');\n\n            return d.Country.match(regex);\n          }\n        });\n        setSugCountries([...filtered]);\n      });\n  }\n  return (\n    <div className=\"App\">\n      <Home />\n      <Routes>\n        <Route path=\"/\" element={<HomeBody />} />\n\n        <Route\n          path=\"multi-app/covid-tracker\"\n          element={[\n            <Form\n              key={'covidTracker'}\n              getData={getDataHandler}\n              inputText={inputText}\n              setInputText={setInputHandler}\n              sugCountries={sugCountries}\n              getCountriesOnStart={getCountriesOnStart}\n              open={open}\n              setOpen={setOpen}\n              searchText={searchTexthandler}\n            />,\n            <Information key={'covidTracker2'} setOpen={setOpen} info={info} />,\n            <Compare\n              key={'compareCountries'}\n              getCountriesOnStart={getCountriesOnStart}\n              sugCountries={sugCountries}\n              searchText={searchTexthandler}\n            />,\n          ]}\n        />\n        <Route path=\"multi-app/todo-app\" element={<TodoApp />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}