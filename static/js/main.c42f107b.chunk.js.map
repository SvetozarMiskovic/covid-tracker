{"version":3,"sources":["components/Form.js","components/Information.js","components/App.js","reportWebVitals.js","index.js"],"names":["Form","props","id","htmlFor","type","placeholder","required","onChange","e","value","target","setInputText","onClick","preventDefault","country","document","querySelector","deaths","active","confirmed","getData","inputText","Information","className","App","useState","setInput","data","fetch","then","res","ok","json","Error","length","console","log","textContent","Country","Deaths","Active","Confirmed","catch","error","toLowerCase","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gNAqCeA,MAnCf,SAAcC,GACZ,OACE,qBAAKC,GAAG,QAAR,SACE,iCACE,uBAAOC,QAAQ,UAAf,0DAGA,uBACEC,KAAK,OACLF,GAAG,UACHG,YAAY,gCACZC,UAAQ,EACRC,SAAU,SAAAC,GACR,IAAMC,EAAQD,EAAEE,OAAOD,MAEvBR,EAAMU,aAAaF,MAGvB,uBACEL,KAAK,SACLK,MAAM,YACNG,QAAS,SAAAJ,GACPA,EAAEK,iBACF,IAAMC,EAAUC,SAASC,cAAc,oBACjCC,EAASF,SAASC,cAAc,gBAChCE,EAASH,SAASC,cAAc,iBAChCG,EAAYJ,SAASC,cAAc,oBACzCf,EAAMmB,QAAQnB,EAAMoB,UAAWP,EAASG,EAAQC,EAAQC,YCdrDG,MAbf,WACE,OACE,sBAAKC,UAAU,SAAf,UACE,oBAAIA,UAAU,kBAAd,qCACA,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,cAAf,sCACA,qBAAKA,UAAU,eAAf,sCACA,qBAAKA,UAAU,kBAAf,6CC0COC,MA/Cf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOJ,EAAP,KAAkBK,EAAlB,KAkCA,OACE,sBAAKH,UAAU,MAAf,UACE,cAAC,EAAD,CACEH,QAhCN,SAAwBC,EAAWP,EAASG,EAAQC,EAAQC,GAC1D,IAAIQ,EACUN,GAGZO,MAFU,mDADEP,GAITQ,MAAK,SAAAC,GACJ,GAAIA,EAAIC,GACN,OAAOD,EAAIE,OAEX,MAAM,IAAIC,MAAM,2BAGnBJ,MAAK,SAAAC,GACJH,EAAOG,EAAIA,EAAII,OAAS,GACxBC,QAAQC,IAAIT,GACRA,IACFb,EAAQuB,YAAcV,EAAKW,QAC3BrB,EAAOoB,YAAcV,EAAKY,OAC1BrB,EAAOmB,YAAcV,EAAKa,OAC1BrB,EAAUkB,YAAcV,EAAKc,cAGhCC,OAAM,SAAAC,GACLR,QAAQC,IAAIO,OASdtB,UAAWA,EACXV,aArCN,SAAyBF,GACvBiB,EAASjB,EAAMmC,kBAsCb,cAAC,EAAD,QClCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASyC,eAAe,SAM1BX,K","file":"static/js/main.c42f107b.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Form.css';\r\nfunction Form(props) {\r\n  return (\r\n    <div id=\"input\">\r\n      <form>\r\n        <label htmlFor=\"country\">\r\n          Please write the country you want stats for!\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"country\"\r\n          placeholder=\"i.e. Serbia, India, Russia...\"\r\n          required\r\n          onChange={e => {\r\n            const value = e.target.value;\r\n\r\n            props.setInputText(value);\r\n          }}\r\n        ></input>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Get Data!\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            const country = document.querySelector('.country-display');\r\n            const deaths = document.querySelector('.death-cases');\r\n            const active = document.querySelector('.active-cases');\r\n            const confirmed = document.querySelector('.confirmed-cases');\r\n            props.getData(props.inputText, country, deaths, active, confirmed);\r\n          }}\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nfunction Information() {\r\n  return (\r\n    <div className=\"holder\">\r\n      <h2 className=\"country-display\">PLEASE SELECT A COUNTRY</h2>\r\n      <div className=\"information-box\">\r\n        <div className=\"death-cases\">PLEASE SELECT A COUNTRY!</div>\r\n        <div className=\"active-cases\">PLEASE SELECT A COUNTRY!</div>\r\n        <div className=\"confirmed-cases\">PLEASE SELECT A COUNTRY!</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Information;\r\n","import React, { useState } from 'react';\nimport '../styles/App.css';\nimport Form from './Form';\nimport Information from './Information';\nfunction App() {\n  const [inputText, setInput] = useState('');\n\n  function setInputHandler(value) {\n    setInput(value.toLowerCase());\n  }\n  function getDataHandler(inputText, country, deaths, active, confirmed) {\n    let data;\n    const input = inputText;\n    const url = 'https://api.covid19api.com/total/dayone/country/' + input;\n    if (input) {\n      fetch(url)\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            throw new Error('Something went wrong');\n          }\n        })\n        .then(res => {\n          data = res[res.length - 1];\n          console.log(data);\n          if (data) {\n            country.textContent = data.Country;\n            deaths.textContent = data.Deaths;\n            active.textContent = data.Active;\n            confirmed.textContent = data.Confirmed;\n          }\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Form\n        getData={getDataHandler}\n        inputText={inputText}\n        setInputText={setInputHandler}\n      />\n      <Information />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}